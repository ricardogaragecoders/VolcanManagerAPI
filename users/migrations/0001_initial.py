# Generated by Django 4.1.2 on 2023-04-25 16:19

import common.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('first_name', models.CharField(default='', max_length=100)),
                ('last_name', models.CharField(default='', max_length=140)),
                ('second_last_name', models.CharField(blank=True, default='', max_length=140)),
                ('email', models.CharField(blank=True, default='', max_length=100)),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('change_password', models.BooleanField(default=False)),
                ('verification_phone', models.BooleanField(default=False)),
                ('verification_email', models.BooleanField(default=False)),
                ('role', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Cliente'), (2, 'Operador'), (3, 'Supervisor'), (4, 'Administrador general'), (10, 'Superadmin')], default=1, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=(common.models.ModelDiffMixin, models.Model, common.models.NameStrMixin),
        ),
        migrations.CreateModel(
            name='WhiteListedToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_token', models.TextField(blank=True, null=True, verbose_name='Registration token')),
                ('type_token', models.CharField(blank=True, max_length=20, null=True, verbose_name='Type token')),
                ('token', models.CharField(blank=True, max_length=500, null=True)),
                ('refresh_token', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('data_verification', models.CharField(blank=True, max_length=150, null=True)),
                ('type_verification', models.SmallIntegerField(choices=[(1, 'Verificación de teléfono'), (2, 'Verificación de correo electrónico'), (3, 'Recuperar contraseña con teléfono'), (4, 'Recuperar contraseña con correo electrónico'), (5, 'Cambiar el numero teléfono'), (6, 'Verificación doble factor de autentificación'), (7, 'Autorización de redención'), (8, 'Autorización de transferencia de puntos')], default=1)),
                ('code', models.CharField(blank=True, default='', max_length=32, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('validity_code', models.DateTimeField(blank=True, null=True)),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.profile')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, common.models.NameStrMixin),
        ),
    ]
